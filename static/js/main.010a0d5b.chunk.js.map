{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","About","NotFound","Test","title","body","fetch","then","response","json","_this$state","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","newContact","preventDefault","abrupt","uuid","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.010a0d5b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'DELETE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\n            }\n        case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [action.payload, ...state.contacts]\n            }\n        case 'UPDATE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.map(\n                    contact =>\n                        contact.id === action.payload.id\n                            ? (contact = action.payload)\n                            : contact\n                )\n            }\n        default:\n            return state;\n    }\n}\n\nexport class Provider extends Component {\n    state = {\n        contacts: [],\n        dispatch: action => { this.setState(state => reducer(state, action)) }\n    }\n    async componentDidMount() {\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n        this.setState({ contacts: res.data })\n    }\n    render() {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Consumer } from \"../../context\";\nimport axios from 'axios';\n\nclass Contact extends Component {\n    state = {\n        showContactInfo: false\n    };\n    onDeleteClick = async (id, dispatch) => {\n        try {\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n            dispatch({type: 'DELETE_CONTACT', payload: id})\n        } catch (e) {\n            dispatch({type: 'DELETE_CONTACT', payload: id})\n        }\n    }\n    render() {\n        const { id, name, email, phone } = this.props.contact;\n        const { showContactInfo } = this.state\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card card-body mb-3\">\n                            <h4>\n                                {name}\n                                <i\n                                    onClick={ () =>\n                                        this.setState({showContactInfo: !this.state.showContactInfo})\n                                    }\n                                    className=\"fa fa-sort-down\"\n                                    style={{ cursor: 'pointer' }}\n                                />\n                                <i\n                                    className=\"fas fa-times\"\n                                    style={{\n                                        cursor: 'pointer',\n                                        float: 'right',\n                                        color: 'red'\n                                    }}\n                                    onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                                />\n                                <Link to={`contact/edit/${id}`}>\n                                    <i\n                                        className=\"fas fa-pencil-alt\"\n                                        style={{\n                                            cursor: 'pointer',\n                                            float: 'right',\n                                            color: 'black',\n                                            marginRight: '1rem',\n                                        }}\n                                    />\n                                </Link>\n                            </h4>\n                            {showContactInfo ? (<ul className=\"list-group\">\n                                <li className=\"list-group-item\">Email: {email}</li>\n                                <li className=\"list-group-item\">Phone: {phone}</li>\n                            </ul>) : null}\n                        </div>\n                    )\n                }}\n            </Consumer>\n\n        )\n    }\n}\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired,\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n    state = {\n\n    }\n    render() {\n        return (\n            <Consumer>\n                {value => {\n                    const { contacts } = value;\n                    return (\n                        <React.Fragment>\n                            <h1 className=\"display-4 mb-2\">\n                                <span className=\"text-danger\">Contact</span> List\n                            </h1>\n                            {contacts.map(contact => (\n                                <Contact\n                                    key={contact.id}\n                                    contact={contact}\n                                />\n                            ) )}\n                        </React.Fragment>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom'\nconst Header = (props) => {\n    const { branding } = props\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n            <div className=\"container\">\n                <a href=\"/\" className=\"navbar-brand\">\n                    {branding}\n                </a>\n                <div>\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\">\n                            <Link to=\"/\" className=\"nav-link\">\n                                <i className=\"fas fa-home\"></i> Home\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/contact/add\" className=\"nav-link\">\n                                <i className=\"fas fa-plus\"></i> Add\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/about\" className=\"nav-link\">\n                                <i className=\"fas fa-question\"></i> About\n                            </Link>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    )\n};\n\nHeader.defaultProps = {\n    branding: 'My App'\n};\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\n\nexport default () => {\n    return (\n        <div>\n            <h1 className=\"display-4\">About Contact Manager</h1>\n            <p className=\"lead\">Simple app to manage contacts</p>\n            <p className=\"text-secondary\">Version 1.0.0</p>\n        </div>\n    )\n}\n","import React from 'react';\n\nexport default () => {\n    return (\n        <div>\n            <h1 className=\"display-4\">\n                <span className=\"text-danger\">404</span> Page Not Found\n            </h1>\n            <p className=\"lead\">Sorry, that page does not exist</p>\n        </div>\n    )\n}\n","import React, { Component } from 'react';\n\nclass Test extends Component {\n    state = {\n        title: '',\n        body: ''\n    }\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\n            .then(response => response.json())\n            .then(data => this.setState({\n                title: data.title,\n                body: data.body\n            }))\n    }\n    render() {\n        const { title, body } = this.state;\n        return (\n            <div>\n                <h1>{title}</h1>\n                <p>{body}</p>\n            </div>\n        )\n    }\n}\n\nexport default Test\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n    label,\n    name,\n    value,\n    placeholder,\n    type,\n    onChange,\n    error\n}) => {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={name}>{label}</label>\n            <input\n                type={type}\n                name={name}\n                className={classnames('form-control form-control-lg', {\n                    'is-invalid': error\n                })}\n                placeholder={placeholder}\n                value={value}\n                onChange={onChange}\n            />\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n\n        </div>\n    );\n};\n\nTextInputGroup.propTypes = {\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string,\n}\n\nTextInputGroup.defaultProps = {\n    type: 'text',\n}\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from '../layout/TextInputGroup';\nimport uuid from 'uuid'\nimport axios from 'axios';\n\nclass AddContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    };\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n\n        const { name, email, phone, errors } = this.state;\n\n        // Check For Errors\n        if (name === '') {\n            this.setState({ errors: { name: 'Name is required'}});\n            return\n        }\n\n        if (email === '') {\n            this.setState({ errors: { email: 'Email is required'}});\n            return\n        }\n\n        if (phone === '') {\n            this.setState({ errors: { phone: 'Phone is required'}});\n            return;\n        }\n\n        const newContact = {\n            id: uuid(),\n            name,\n            email,\n            phone\n        }\n\n        const res = await axios.post(`https://jsonplaceholder.typicode.com/users`, newContact)\n        dispatch({ type: 'ADD_CONTACT', payload: res.data });\n\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        this.props.history.push('/');\n    };\n\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n    render() {\n        const { name, email, phone, errors } = this.state;\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value\n                    return (\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header\">Add Contact</div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <TextInputGroup\n                                        label=\"Name\"\n                                        name=\"name\"\n                                        placeholder=\"Enter Name\"\n                                        value={name}\n                                        onChange={this.onChange}\n                                        error={errors.name}\n                                    />\n                                    <TextInputGroup\n                                        label=\"Email\"\n                                        name=\"email\"\n                                        placeholder=\"Enter Email\"\n                                        value={email}\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n                                    <TextInputGroup\n                                        label=\"Phone\"\n                                        name=\"phone\"\n                                        placeholder=\"Enter Phone\"\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n\n                                    <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\"/>\n                                </form>\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default AddContact\n","import React, { Component } from 'react';\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from '../layout/TextInputGroup';\nimport uuid from 'uuid'\nimport axios from 'axios';\n\nclass EditContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    };\n\n    async componentDidMount() {\n        const { id } = this.props.match.params;\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\n        const contact = res.data;\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone,\n        })\n    }\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n\n        const { name, email, phone, errors } = this.state;\n\n        // Check For Errors\n        if (name === '') {\n            this.setState({ errors: { name: 'Name is required'}});\n            return\n        }\n\n        if (email === '') {\n            this.setState({ errors: { email: 'Email is required'}});\n            return\n        }\n\n        if (phone === '') {\n            this.setState({ errors: { phone: 'Phone is required'}});\n            return;\n        }\n\n        const updContact = {\n            name,\n            email,\n            phone\n        }\n\n        const { id } = this.props.match.params;\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact)\n        dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\n\n        // Clear State\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        this.props.history.push('/');\n    };\n\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n    render() {\n        const { name, email, phone, errors } = this.state;\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value\n                    return (\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header\">Edit Contact</div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <TextInputGroup\n                                        label=\"Name\"\n                                        name=\"name\"\n                                        placeholder=\"Enter Name\"\n                                        value={name}\n                                        onChange={this.onChange}\n                                        error={errors.name}\n                                    />\n                                    <TextInputGroup\n                                        label=\"Email\"\n                                        name=\"email\"\n                                        placeholder=\"Enter Email\"\n                                        value={email}\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n                                    <TextInputGroup\n                                        label=\"Phone\"\n                                        name=\"phone\"\n                                        placeholder=\"Enter Phone\"\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n\n                                    <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\"/>\n                                </form>\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default EditContact\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport { Provider } from './context';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nclass App extends Component {\n  render() {\n    return (\n        <Provider>\n            <Router>\n                <div className=\"App\">\n                    <Header branding=\"Contact Manager\"/>\n                    <div className=\"container\">\n                        <Switch>\n                            <Route exact path=\"/\" component={Contacts}/>\n                            <Route exact path=\"/contact/add\" component={AddContact}/>\n                            <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n                            <Route exact path=\"/about\" component={About}/>\n                            <Route exact path=\"/test\" component={Test}/>\n                            <Route component={NotFound}/>\n                        </Switch>\n                    </div>\n                </div>\n            </Router>\n        </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}